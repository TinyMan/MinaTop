service cloud.firestore {
  match /databases/{database}/documents {

    match /groups/{group} {
      function isSignedIn() {
        return request.auth != null;
      }
      allow get: if isSignedIn();
      allow list: if false;
      allow write: if false;

      match /orders/{order} {
        allow read: if isSignedIn() && existingData().fulfilled == false;
        allow update: if isSignedIn()
                      && existingData().author == request.auth.uid
                      && request.writeFields.size() == 1
                      && 'fulfilled' in request.writeFields
                      && existingData().fulfilled == false
                      && incomingData().fulfilled == true;
        allow create: if isSignedIn()
                      && incomingData().author == request.auth.uid
                      && incomingData().fulfilled == false
                      && incomingData().expiration < request.time.toMillis() + 18000000
                      && (getParentGroup().currentOrder == null
                      || getOrder(getParentGroup().currentOrder).expiration < request.time.toMillis());

        function getParentGroup() {
          return get(/databases/$(database)/documents/groups/$(group)).data;
        }
        function getOrder(o) {
          return get(/databases/$(database)/documents/groups/$(group)/orders/$(o)).data;
        }

        match /carts/{cart} {
          function getParentOrder() {
            return getOrder(order);
          }
          function isAuthor() {
            return isSignedIn() && request.auth.uid == getParentOrder().author;
          }
        	allow list: if isAuthor();
          allow get: if cart == request.auth.uid;
          allow write: if isSignedIn() && request.auth.uid == cart && getParentOrder().fulfilled == false;
        }
      }
    }

    function existingData() {
      return resource.data;
    }
    function incomingData() {
      return request.resource.data;
    }
  }
}
